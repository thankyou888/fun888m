
name: Create Release

on:
  release:
    types:
      - created
  workflow_dispatch:  # For testing

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --quiet

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install npm dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create zip archive
        run: |
          mkdir ${{ github.event.repository.name }}
          rsync -a --exclude-from=.distignore --exclude=${{ github.event.repository.name }}/ . ${{ github.event.repository.name }}/
          cd ${{ github.event.repository.name }}
          zip -r ../${{ github.event.repository.name }}_${{ github.ref_name }}.zip .
          cd ..

      - name: Publish release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ github.event.repository.name }}_${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
